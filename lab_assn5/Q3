#include <iostream>
using namespace std;
struct Node {
    int data;
    Node* next;
};
Node* head=NULL;

void insertAtEnd(int val) {
    Node* newNode=new Node{val, NULL};
    if (!head) 
{     head = newNode;}
    else {
        Node* temp= head;
        while (temp->next) {
          temp=temp->next;}
        temp->next=newNode;
    }
}

void findMiddle() {
    if (!head) {
        cout<<"List  empty";
        return;
    }

    Node* slow=head;
    Node* fast=head;

    while (fast && fast->next) {
        slow=slow->next;        
        fast=fast->next->next; 
    }

    cout<<"Middle-"<<slow->data<<endl;
}

void display() {
    Node* temp=head;
    while (temp) {
        cout<<temp->data<<"=> ";
        temp=temp->next;
    }
    cout<<"null";
}

int main() {
    int arr[]={1,2,3,4,5};
    for (int x : arr) insertAtEnd(x);

    cout<<"Linked List";
    display();
    findMiddle();
}
