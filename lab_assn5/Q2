#include <iostream>
using namespace std;
struct Node {
    int data;
    Node* next;
};
Node* head=NULL;

void insertAtEnd(int val) {
    Node* newNode=new Node{val, NULL};
    if (head==NULL) {
        head=newNode;}
    else {
        Node* temp = head;
        while (temp->next != NULL) {
             temp=temp->next;}
        temp->next=newNode;
    }
}

int deleteOccurrences(int key) {
    int count=0;

    
    while (head!=NULL && head->data==key) {
        Node* temp=head;
        head=head->next;
        delete temp;
        count++;
    }

    Node* curr = head;
    while (curr!=NULL && curr->next!=NULL) {
        if (curr->next->data==key) {
            Node* temp=curr->next;
            curr->next= urr->next->next;
            delete temp;
            count++;
        } 
      else {
            curr=curr->next;
        }
    }
    return count;
}

void display() {
    Node* temp=head;
    while (temp!=NULL) {
        cout<<temp->data<<"=";
        temp=temp->next;
    }
    cout<<"NULL\n";
}

int main() {
    int arr[]={1,2,1,2,1,3,1};
    for (int x:arr) {
      insertAtEnd(x);}

    cout<<"Original list: ";
    display();
    int key=1;
    int cnt=deleteOccurrences(key);
    cout<<"Count: "<<cnt<<endl;
    cout<<"Updated:";
    display();
}
